{"ast":null,"code":"var _jsxFileName = \"/home/vikramaditya/CL-II/react_project/src/Home.js\",\n  _s = $RefreshSig$();\n// Home.js\nimport React, { useState } from \"react\";\nimport { Container, Segment } from \"semantic-ui-react\";\nimport './Home.css';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [text, setText] = useState('');\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const handleOnClick = () => {\n    speak({\n      text: text\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text to Speech Converter in React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textAreaStyle\",\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonStyle\",\n        onClick: handleOnClick,\n        children: \"Listen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"lvqcyuDGSp8vJyjEt1JbVAW/BhQ=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Container","Segment","useSpeechSynthesis","jsxDEV","_jsxDEV","Home","_s","text","setText","speak","handleOnClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/home/vikramaditya/CL-II/react_project/src/Home.js"],"sourcesContent":["// Home.js\nimport React, { useState } from \"react\";\nimport { Container, Segment } from \"semantic-ui-react\";\nimport './Home.css'\nimport { useSpeechSynthesis } from 'react-speech-kit';\n\nfunction Home() {\n  const [text, setText] = useState('');\n  const { speak } = useSpeechSynthesis();\n\n  const handleOnClick = () => {\n    speak({ text: text });\n  }\n\n  return (\n    <Container>\n      <Segment>\n        <h1>Text to Speech Converter in React</h1>\n        <textarea className=\"textAreaStyle\" onChange={(e) => { setText(e.target.value) }}></textarea>\n        <button className=\"buttonStyle\" onClick={handleOnClick}>Listen</button>\n      </Segment>\n    </Container>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,OAAO,QAAQ,mBAAmB;AACtD,OAAO,YAAY;AACnB,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEU;EAAM,CAAC,GAAGP,kBAAkB,CAAC,CAAC;EAEtC,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1BD,KAAK,CAAC;MAAEF,IAAI,EAAEA;IAAK,CAAC,CAAC;EACvB,CAAC;EAED,oBACEH,OAAA,CAACJ,SAAS;IAAAW,QAAA,eACRP,OAAA,CAACH,OAAO;MAAAU,QAAA,gBACNP,OAAA;QAAAO,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CX,OAAA;QAAUY,SAAS,EAAC,eAAe;QAACC,QAAQ,EAAGC,CAAC,IAAK;UAAEV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC7FX,OAAA;QAAQY,SAAS,EAAC,aAAa;QAACK,OAAO,EAAEX,aAAc;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEhB;AAACT,EAAA,CAjBQD,IAAI;EAAA,QAEOH,kBAAkB;AAAA;AAAAoB,EAAA,GAF7BjB,IAAI;AAmBb,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}